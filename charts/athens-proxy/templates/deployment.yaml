apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: {{ template "fullname" . }}
  labels:
    app: {{ template "fullname" . }}
    chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
    release: "{{ .Release.Name }}"
    heritage: "{{ .Release.Service }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "fullname" . }}
      chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
      release: "{{ .Release.Name }}"
  template:
    metadata:
      labels:
        app: {{ template "fullname" . }}
        chart: "{{ .Chart.Name }}-{{ .Chart.Version }}"
        release: "{{ .Release.Name }}"
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/config-upstream.yaml") . | sha256sum }}
    spec:
      containers:
      - name: {{ template "fullname" . }}
        image: "{{ .Values.image.registry }}/{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        livenessProbe:
          httpGet:
            path: "/healthz"
            port: 3000
        readinessProbe:
          httpGet:
            path: "{{ template "readinessPath" . }}"
            port: 3000
        env:
        - name: ATHENS_STORAGE_TYPE
          value: {{ .Values.storage.type | quote }}
        {{- if eq .Values.storage.type "disk"}}
        - name: ATHENS_DISK_STORAGE_ROOT
          value: {{ .Values.storage.disk.storageRoot | quote }}
        {{- else if eq .Values.storage.type "mongo"}}
        - name: ATHENS_MONGO_STORAGE_URL
          value: {{ .Values.storage.mongo.url | quote }}
        {{- end }}
        {{- if .Values.netrc.enabled }}
        - name: ATHENS_NETRC_PATH
          value: "/etc/netrc/netrc"
        {{- end }}
        {{- if .Values.upstreamProxy.enabled }}
        - name: ATHENS_FILTER_FILE
          value: "/usr/local/lib/FilterForUpstreamProxy"
        - name: ATHENS_GLOBAL_ENDPOINT
          value: {{ .Values.upstreamProxy.url | quote }}
        {{- end }}
        {{- if .Values.jaeger.enabled }}
        - name: ATHENS_TRACE_EXPORTER_URL
          value: {{ .Values.jaeger.url | quote }}
        - name: ATHENS_TRACE_EXPORTER
          value: "jaeger"
        {{- end }}
        ports:
        - containerPort: 3000
        {{- if eq .Values.storage.type "disk" }}
        volumeMounts:
        - name: storage-volume
          mountPath: {{ .Values.storage.disk.storageRoot | quote }}
        {{- end }}
        {{- if .Values.upstreamProxy.enabled}}
        - name: upstream-config
          mountPath: "/usr/local/lib"
          readOnly: true
        {{- end }}
        {{- if .Values.netrc.enabled}}
        - name: netrc
          mountPath: "/etc/netrc"
          readOnly: true
        {{- end }}
      volumes:
      - name: storage-volume
      {{- if .Values.storage.disk.persistence.enabled }}
        persistentVolumeClaim: 
          claimName: {{ template "fullname" . }}-storage
      {{- else }}
        emptyDir: {}
      {{- end }}
      {{- if .Values.upstreamProxy.enabled }}
      - name: upstream-config
        configMap:
          name: {{ template "fullname" . }}-upstream
      {{- end }}
      {{- if .Values.netrc.enabled }}
      - name: netrc
        secret:
          secretName: {{ .Values.netrc.existingSecret }}
      {{- end }}
    {{- with .Values.nodeSelector }}
      nodeSelector:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.affinity }}
      affinity:
{{ toYaml . | indent 8 }}
    {{- end }}
    {{- with .Values.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
    {{- end }}
