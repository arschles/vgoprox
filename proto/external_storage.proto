syntax = "proto3";
// purposely leaving out delete. that is up to individual external
// storage server operators to do on their end

service ProxyStorage {

    rpc GetModuleModfile (ModuleMetadata) (ModuleMod) {}
    rpc GetModuleInfo (ModuleMetadata) (ModuleInfo) {}
    rpc GetModuleZip (ModuleMetadata) returns (ModuleZip) {}
    rpc SaveModule (ModuleData) returns (ModuleSaveResponse) {}
    rpc ListVersions (ListVersionsRequest) returns (ListVersionsResponse) {}
    rpc CheckModuleAndVersion(ModuleMetadata) returns (CheckModuleAndVersionResponse) {}
    rpc GetModuleCatalog (GetModuleCatalogRequest) returns (GetModuleCatalogResponse) {}
}

// ModuleMetata is the name and version of a module
message ModuleMetadata {
    string name = 1;
    // this is redundant for GetModuleCatalogResponse but not for 
    // GetModule and others. Implementations can return this and Athens
    // may choose to ignore it.
    string version = 2;
}

// ModuleMod is the go.mod file for a module@version
message ModuleMod {
    string mod_file = 1;
}

// ModuleInfo is the JSON metadata that gets returned from
// the @v/v1.2.3.info endpoint
message ModuleInfo {
    string timestamp = 1;
    string version = 2;
}

// ModuleZip is the zip file of a module's source code
message ModuleZip {
    bytes zip_file = 1;
}

message ModuleData {
    ModuleMetadata metadata = 1;
    string mod_file = 2;
    ModuleInfo info = 3;
    bytes zip_file = 4;

}

message ModuleSaveResponse {}

message ListVersionsRequest {
    string module_name = 1;
}

message ListVersionsResponse {
    repeated string versions = 1;
}

message CheckModuleAndVersionResponse {
    bool exists = 1;
}

message GetModuleCatalogRequest {
    string token = 1;
    uint64 page_size = 2;
}

message GetModuleCatalogResponse {
    map<string, ModuleMetadata> modules = 1;
}

