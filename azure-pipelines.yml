# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

pool:
  vmImage: 'vs2017-win2016'

variables:
  GOBIN:  '$(GOPATH)\bin' # Go binaries path
  GOPATH: '$(system.defaultWorkingDirectory)\gopath' # Go workspace path
  GO111MODULE: 'on'
  modulePath: '$(GOPATH)\src\github.com\$(build.repository.name)' # Path to the module's code

steps:
- powershell: |
    mkdir "$env:GOBIN" | out-null
    mkdir "$env:GOPATH\pkg" | out-null
    mkdir "$env:modulePath" | out-null
    robocopy "$env:system_defaultWorkingDirectory\" "$env:modulePath\" /E /Z /ZB /R:5 /W:5 /TBD /NP /V /XD "$env:GOPATH"
    exit ($LastExitCode -band 24)
  displayName: 'set up the Go workspace'

- powershell: |
    $downloadURL = "https://dl.minio.io/server/minio/release/windows-amd64/minio.exe"
    Write-Host "download minio from $downloadURL - start"
    [Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Tls12
    Invoke-WebRequest -Uri $downloadURL -OutFile "minio.exe"
    Write-Host "download minio - end"
    Start-Process -NoNewWindow minio.exe 'server --address ":9001" .'
  env:
    MINIO_ACCESS_KEY: "minio"
    MINIO_SECRET_KEY: "minio123"
  displayName: 'start minio'

- powershell: |
    $emulatorBin = "C:\Program Files\Azure Cosmos DB Emulator\CosmosDB.Emulator.exe"
    if (!(Test-Path $emulatorBin)) {
      Write-Error "$emulatorBin not found"
    }
    else {
      Start-Process -NoNewWindow -FilePath $emulatorBin '/NoUI /NoExplorer'
    }
  displayName: 'start cosmos db emulator'

- powershell: |
    go test -mod=vendor -race ./...
  env:
    ATHENS_MINIO_ENDPOINT: "127.0.0.1:9001"
    ATHENS_MONGO_STORAGE_URL: "mongodb://localhost:C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw==@localhost:10255?ssl=true"
  workingDirectory: '$(modulePath)'
  displayName: 'run tests'

